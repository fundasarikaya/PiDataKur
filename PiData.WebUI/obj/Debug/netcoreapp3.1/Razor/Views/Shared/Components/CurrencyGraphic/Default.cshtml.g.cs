#pragma checksum "C:\Users\funda\Desktop\PiData.Proje\PiData.WebUI\Views\Shared\Components\CurrencyGraphic\Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4b59e8ff695770368ee204bdf76ee9ca1e7dee6a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_CurrencyGraphic_Default), @"mvc.1.0.view", @"/Views/Shared/Components/CurrencyGraphic/Default.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\funda\Desktop\PiData.Proje\PiData.WebUI\Views\_ViewImports.cshtml"
using PiData.WebUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\funda\Desktop\PiData.Proje\PiData.WebUI\Views\_ViewImports.cshtml"
using PiData.WebUI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b59e8ff695770368ee204bdf76ee9ca1e7dee6a", @"/Views/Shared/Components/CurrencyGraphic/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9ea0a5554ddb91edfabefae5ceedbf37827dd3d5", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_Components_CurrencyGraphic_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<PiData.Business.Common.ExchangeListDTO>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"    <div class=""chart"">
        <canvas id=""lineChart"" style=""height:250px""></canvas>
    </div>

<script>

    $(function () {
        
        var areaChartData = {
            labels: ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'],
            datasets: [
                {
                    label: 'Döviz Alış',
                    fillColor: 'rgba(210, 214, 222, 1)',
                    strokeColor: 'rgba(210, 214, 222, 1)',
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: [28, 48, 40, 19, 86, 27, 90, 59, 80, 81, 56, 55]
                },
                {
                    label: 'Döviz Satış',
                    fillColor: 'rgba(60,141,188,0.9)',
                    strokeColor: 'rgba(60,141,188,0.8)',
              ");
            WriteLiteral(@"      pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: [28, 48, 40, 19, 86, 27, 90, 59, 80, 81, 56, 55]
                }
            ]
        }
        var areaChartOptions = {
            showScale: true,
            scaleShowGridLines: false,
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            scaleGridLineWidth: 1,
            scaleShowHorizontalLines: true,
            scaleShowVerticalLines: true,
            bezierCurve: true,
            bezierCurveTension: 0.3,
            pointDot: false,
            pointDotRadius: 4,
            pointDotStrokeWidth: 1,
            pointHitDetectionRadius: 20,
            datasetStroke: true,
            datasetStrokeWidth: 2,
            datasetFill: true,
            legendTemplate: '<ul class=""<%=name.toLowerCase()%>-legend""><% for (var i=0; i<datasets.lengt");
            WriteLiteral(@"h; i++){%><li><span style=""background-color:<%=datasets[i].lineColor%>""></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            maintainAspectRatio: true,
            responsive: true
        }

        var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
        var lineChart = new Chart(lineChartCanvas)
        var lineChartOptions = areaChartOptions
        lineChartOptions.datasetFill = false
        lineChart.Line(areaChartData, lineChartOptions)
    })
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<PiData.Business.Common.ExchangeListDTO>> Html { get; private set; }
    }
}
#pragma warning restore 1591
